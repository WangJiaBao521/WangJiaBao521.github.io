<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>念觉</title>
  
  <subtitle>jys</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-23T13:08:36.349Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>安徒生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Array/ArrarList 常用方法</title>
    <link href="http://yoursite.com/2020/09/23/Array-ArrarList-%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/09/23/Array-ArrarList-%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2020-09-23T12:54:31.000Z</published>
    <updated>2020-09-23T13:08:36.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Array-ArrayList-基本使用"><a href="#Array-ArrayList-基本使用" class="headerlink" title="Array / ArrayList 基本使用"></a>Array / ArrayList 基本使用</h2><font dace="黑体" color="red" size="3">注意程序运行时堆,栈,方法区的变化:</font><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">* Java的内存划分为5个部分:</span><br><span class="line">* 1.栈(Stack):存放的都是方法中的局部变量</span><br><span class="line">*           局部变量：方法的参数或者是方法&#123;&#125;中的变量</span><br><span class="line">*           作用域: 一旦超出作用域，立刻从栈中消失</span><br><span class="line">* 2.堆(Heap):凡是new出的东西都在堆当中</span><br><span class="line">*           堆内存中的东西都有一个地址值：16进制</span><br><span class="line">*           堆内存中的数据默认都有值。规则：</span><br><span class="line">*               整数      默认：0</span><br><span class="line">*               浮点数    默认：0.0</span><br><span class="line">*               字符      默认：&apos;\u0000&apos;</span><br><span class="line">*               布尔      默认：false</span><br><span class="line">*               引用类型    默认：null</span><br><span class="line">*</span><br><span class="line">* 3.方法区(Method Area): 存储class相关信息。包含方法的信息</span><br><span class="line">* 4.本地方法栈(Native Method Stack):与操作系统相关</span><br><span class="line">* 5.寄存器(pc Register): 与cpu相关</span><br></pre></td></tr></table></figure><p>补充：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java四类八种基本数据类型 度量单位均为字节</span><br><span class="line">第一类：整型 byte 1  short 2 int4 long8</span><br><span class="line">第二类：浮点型 float4 double8</span><br><span class="line">第三类：逻辑型 boolean(它只有两个值可取true false) 1/8字节</span><br><span class="line">第四类：字符型 char</span><br></pre></td></tr></table></figure><h3 id="Array基本用法"><a href="#Array基本用法" class="headerlink" title="Array基本用法"></a>Array基本用法</h3><p>数组是一组容器，用来存放多个数据值<br>特点：</p><ul><li><p>1.数组是一种引用数据类型</p></li><li><p>2.数组中的多个数据类型类型必须统一</p></li><li><p>3.数组的长度在程序运行期间不能改变   </p><p>两种初始化方式：<br>1）动态初始化   数据类型[] 数组名称=new 数据类型[组数长度]<br>2）静态初始化   数据类型 数组名称=new 数据类型{元素1,元素2,….};</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义声明</span></span><br><span class="line">String[] str=<span class="keyword">new</span> String[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span>[] array=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">5</span>,<span class="number">15</span>,<span class="number">35</span>,<span class="number">6</span>,<span class="number">78</span>,<span class="number">66</span>&#125;;</span><br><span class="line"><span class="keyword">byte</span>[] bytes=&#123;<span class="string">'1'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取最大值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span>  <span class="title">getMax</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;arr.length;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[i]&gt;arr[max])&#123;</span><br><span class="line">max=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">       <span class="keyword">return</span> arr[max];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取最小值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span>  <span class="title">getMin</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> min=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;arr.length;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[i]&lt;arr[min])&#123;</span><br><span class="line">min=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">       <span class="keyword">return</span> arr[min];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectBort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;arr.length;x++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> y=x+<span class="number">1</span>;y&lt;arr.length;y++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(arr[x]&gt;arr[y])&#123;</span><br><span class="line">swap(arr,x,y);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp=arr[a];</span><br><span class="line">arr[a]=arr[b];</span><br><span class="line">arr[b]=temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 稀疏数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">int</span>[][] arr=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">arr[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">10</span>;</span><br><span class="line">arr[<span class="number">5</span>][<span class="number">7</span>]=<span class="number">35</span>;</span><br><span class="line">arr[<span class="number">6</span>][<span class="number">2</span>]=<span class="number">12</span>;</span><br><span class="line"> <span class="comment">//输出稀疏数组</span></span><br><span class="line">System.out.println(<span class="string">"输出原始数组:"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span>[] i:arr) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j:i) &#123;</span><br><span class="line">      System.out.printf(j+<span class="string">"\t"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">      System.out.println(<span class="string">""</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//压缩为稀疏数组</span></span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;arr.length ; i++) &#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;<span class="number">10</span> ; j++) &#123;</span><br><span class="line">       <span class="keyword">if</span> (arr[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">             sum=sum+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"共有"</span>+sum+<span class="string">"个有效值."</span>);</span><br><span class="line"><span class="comment">//进行数组压缩</span></span><br><span class="line"><span class="keyword">int</span> [][] arr2=<span class="keyword">new</span> <span class="keyword">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">arr2[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">10</span>;</span><br><span class="line">arr2[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">10</span>;</span><br><span class="line">arr2[<span class="number">0</span>][<span class="number">2</span>]=sum;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;arr.length ; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;arr[i].length ; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">         arr2[count+<span class="number">1</span>][<span class="number">0</span>]=i;</span><br><span class="line">         arr2[count+<span class="number">1</span>][<span class="number">1</span>]=j;</span><br><span class="line">         arr2[count+<span class="number">1</span>][<span class="number">2</span>]=arr[i][j];</span><br><span class="line">         count++;</span><br><span class="line">       &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> System.out.println(<span class="string">"输出稀疏数组:"</span>);</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;arr2.length ; i++) &#123;</span><br><span class="line">    System.out.println(Arrays.toString(arr2[i]));</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//将稀疏数组转化为数组输出</span></span><br><span class="line"> System.out.println(<span class="string">"将稀疏数组转化为数组:"</span>);</span><br><span class="line"> <span class="keyword">int</span>[][] arr3=<span class="keyword">new</span> <span class="keyword">int</span>[arr2[<span class="number">0</span>][<span class="number">0</span>]][arr2[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;arr2.length ; i++) &#123;</span><br><span class="line">     arr3[arr2[i][<span class="number">0</span>]][arr2[i][<span class="number">1</span>]]=arr2[i][<span class="number">2</span>];</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;arr3.length ; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;arr3[i].length ; j++) &#123;</span><br><span class="line">      System.out.print(arr3[i][j]+<span class="string">"\t"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">      System.out.println(<span class="string">" "</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="ArrayList基本用法"><a href="#ArrayList基本用法" class="headerlink" title="ArrayList基本用法"></a>ArrayList基本用法</h3><ul><li><p>1.数字长度可以任意变化</p></li><li><p>2.<e>代表泛型，泛型也就是装在集合中的所有元素，全部都是统一的某种类型</e></p><font dace="黑体" color="red" size="3">注意：泛型只能是引用类型不能是基本类型</font></li><li><p>3.对于ArrayList来说直接打印的得到的不是地址值而是内容，如果内容为空则打印[]      </p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; arrayList=<span class="keyword">new</span> ArrayList();</span><br><span class="line">System.out.print(arrayList);</span><br><span class="line">arrayList.add(<span class="string">"hello world"</span>);</span><br><span class="line">System.out.print(arrayList);</span><br></pre></td></tr></table></figure><p>常用方法：</p><ul><li><p>1.public boolean add<e e=""> ;向集合中添加元素，参数类型和泛型保持一致</e></p><font dace="黑体" color="red" size="3">备注：对于array List元素来说，add添加元素是一定成功的，返回值可以不用， 其他集合的的add添加动作不一定成功.</font></li><li><p>2.public E get(int index) ;从集合中获取元素，参数是索引编号，返回值就是对应位置的元素</p></li><li><p>3.public E remove(int index) ; 从集合中删除元素，参数是索引编号，返回值就是被删除掉的元素</p></li><li><p>4.public int size() ; 获取集合尺寸长度，返回值是集合中包含的元素个数</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> success=arrayList.add(<span class="string">"I am student"</span>);</span><br><span class="line">System.out.print(<span class="string">"添加的动作是否成功"</span>+success);</span><br><span class="line"><span class="comment">//从集合中获取元素：get.索引值从0开始.</span></span><br><span class="line">String string=arrayList.get(<span class="number">0</span>);</span><br><span class="line">System.out.printf(<span class="string">"从集合中获取的元素是:"</span>+string);</span><br><span class="line"><span class="comment">//从集合中删除元素:remove.</span></span><br><span class="line">String string2=arrayList.remove(<span class="number">0</span>);</span><br><span class="line">System.out.printf(<span class="string">"从集合中删除的元素是:"</span>+string2);</span><br><span class="line"><span class="comment">//遍历集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrayList.size(); i++) &#123;</span><br><span class="line">            System.out.println(arrayList.get(i));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>ArrayList集合中若想存放基本数据类型，必须使用基本类型对应的包装类基本类型   包装类（引用类型，都位于java.long包下）<br>         byte      Byte<br>         int       Integer<br>         short     Short<br>         long      Long<br>         double    Double<br>         float     Float<br>         char      Character<br>         boolean   Boolean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int 应用类型举例</span></span><br><span class="line">ArrayList&lt;Integer&gt; listInt=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">listInt.add(<span class="number">100</span>);</span><br><span class="line">listInt.add(<span class="number">300</span>);</span><br><span class="line">System.out.println(listInt.get(<span class="number">0</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Array-ArrayList-基本使用&quot;&gt;&lt;a href=&quot;#Array-ArrayList-基本使用&quot; class=&quot;headerlink&quot; title=&quot;Array / ArrayList 基本使用&quot;&gt;&lt;/a&gt;Array / ArrayList 基本使用&lt;/
      
    
    </summary>
    
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Markdown</title>
    <link href="http://yoursite.com/2020/09/22/Markdown/"/>
    <id>http://yoursite.com/2020/09/22/Markdown/</id>
    <published>2020-09-22T04:24:37.000Z</published>
    <updated>2020-09-22T04:43:44.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="markdown-常用小技巧"><a href="#markdown-常用小技巧" class="headerlink" title="markdown 常用小技巧"></a>markdown 常用小技巧</h2><p>1.通过 #号+空格 表示标题 1-6级(几级标题几个#号)</p><h1 id="iiswho-cn"><a href="#iiswho-cn" class="headerlink" title="iiswho.cn"></a>iiswho.cn</h1><h2 id="IISWHO-CN"><a href="#IISWHO-CN" class="headerlink" title="IISWHO.CN"></a>IISWHO.CN</h2><h3 id="iiswho-cn-1"><a href="#iiswho-cn-1" class="headerlink" title="iiswho.cn"></a>iiswho.cn</h3><h4 id="iiswho-cn-2"><a href="#iiswho-cn-2" class="headerlink" title="iiswho.cn"></a>iiswho.cn</h4><p>2.更改字体，大小，颜色</p><p>​    1)粗体 : <code>**iiswho.cn**</code> </p><p>​    <strong>iiswho.cn</strong></p><p>​    2)斜体: <code>*iiswho.cn*</code></p><p>​    <em>iiswho.cn</em>  </p><p>​    3) &gt;+空格 引用效果</p><blockquote><p>此文章来源于iiswho.cn                  </p></blockquote><p>​    4)分割线”- - -“或者”***”</p><hr><p>​    5）居中显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>居中的内容<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>居中设置大小&lt;center&gt;&lt;font size=4&gt;设置居中内容的大小&lt;/font&gt;&lt;/center&gt;   </code></pre><p>​    6)换行 :使用br标签 或者末尾敲两个空格然后回车</p><p>​    7)精确设置字体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;黑体&quot; color=blue size=5&gt;我是黑体，蓝色，尺寸为5&lt;/font&gt;</span><br></pre></td></tr></table></figure><font face="黑体" color="blue" size="5">我是黑体，蓝色，尺寸为5</font><p>4.图片<br>    <code>![图片名称] (图片地址/本地网络均可)  注意：如若想设置如片大小可添加div容器进行设置</code></p><div style="width :75px; hight: 75px;margin: auto"><img src="/images/小新7.jpg" alt="我的头像"></div><p>5.超链接<br>     <code>[链接标题] (链接地址)</code><br>​    <a href="iiswho.cn">我的博客</a>  </p><p>6.列表</p><p>​    1)有序: 1.空格</p><p>​    2)无序: ‘-‘+空格</p><p>7.代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">​```+编写语言:</span><br><span class="line">This is java</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;markdown-常用小技巧&quot;&gt;&lt;a href=&quot;#markdown-常用小技巧&quot; class=&quot;headerlink&quot; title=&quot;markdown 常用小技巧&quot;&gt;&lt;/a&gt;markdown 常用小技巧&lt;/h2&gt;&lt;p&gt;1.通过 #号+空格 表示标题 1-6级(几
      
    
    </summary>
    
    
    
      <category term="Compiler tools" scheme="http://yoursite.com/tags/Compiler-tools/"/>
    
  </entry>
  
  <entry>
    <title>idea test</title>
    <link href="http://yoursite.com/2019/12/03/idea%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/12/03/idea%E6%B5%8B%E8%AF%95/</id>
    <published>2019-12-03T13:46:36.192Z</published>
    <updated>2020-09-22T04:46:16.634Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更新提示"><a href="#更新提示" class="headerlink" title="更新提示"></a>更新提示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot;  #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; # 新建页面</span><br><span class="line">hexo generate # 生成静态页面至public目录</span><br><span class="line">hexo server # 启动服务器(默认端口4000，&apos;ctrl+c&apos;关闭server)</span><br><span class="line">hexo deploy # 项目部署</span><br><span class="line">hexo help # 查看帮助</span><br><span class="line">hexo version # 查看Hexo的版本</span><br><span class="line">hexo clean # 清除Hexo的缓存</span><br></pre></td></tr></table></figure><p>###上边的一些命令可以使用简写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><h3 id="本地调试三连"><a href="#本地调试三连" class="headerlink" title="本地调试三连"></a>本地调试三连</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure><p>###远程部署三连<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;更新提示&quot;&gt;&lt;a href=&quot;#更新提示&quot; class=&quot;headerlink&quot; title=&quot;更新提示&quot;&gt;&lt;/a&gt;更新提示&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
    
      <category term="Compiler tools" scheme="http://yoursite.com/tags/Compiler-tools/"/>
    
  </entry>
  
  <entry>
    <title>Centos7配置Jdk1.8及搭建Tomcat服务</title>
    <link href="http://yoursite.com/2018/06/03/Centos7%E9%85%8D%E7%BD%AEJdk1-8%E5%8F%8A%E6%90%AD%E5%BB%BATomcat%E6%9C%8D%E5%8A%A1/"/>
    <id>http://yoursite.com/2018/06/03/Centos7%E9%85%8D%E7%BD%AEJdk1-8%E5%8F%8A%E6%90%AD%E5%BB%BATomcat%E6%9C%8D%E5%8A%A1/</id>
    <published>2018-06-03T11:31:00.000Z</published>
    <updated>2020-09-22T04:43:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-Java-JDK1-8配置-Coentos-7"><a href="#一-Java-JDK1-8配置-Coentos-7" class="headerlink" title="一. Java JDK1.8配置(Coentos 7)"></a>一. Java JDK1.8配置(Coentos 7)</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>下载 FileZilla(官网的绿色版完全免费)<br>    下载 jdk1.8安装包 tar.gz(Linux下压缩格式)<br>利用 FileZilla文件传输软件将下载好的压缩包传送到服务器</p><h3 id="云服务器端配置-xxx均为自己的文件名"><a href="#云服务器端配置-xxx均为自己的文件名" class="headerlink" title="云服务器端配置(xxx均为自己的文件名)"></a>云服务器端配置(xxx均为自己的文件名)</h3><p>1.在usr/local/目录下 建立 services/jdk8 目录.<br>2.解压文件在jdk目录下   使用命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zvxf xxx.tar.gz</span><br></pre></td></tr></table></figure></p><p>3.解压完成后java 命令可以使用  javac 需要配置环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line">在文件最后加入</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/services/jdk8（jdk的绝对路径）</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure></p><p>到此 javac 测试 没问题就是配置成功</p><h2 id="二-在centos7-中安装tomcat"><a href="#二-在centos7-中安装tomcat" class="headerlink" title="二.在centos7 中安装tomcat"></a>二.在centos7 中安装tomcat</h2><h3 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h3><pre><code>下载 tomcat安装包 tar.gz</code></pre><p>利用 FileZilla 将下载好的压缩包传送到服务器</p><h3 id="云服务器端配置"><a href="#云服务器端配置" class="headerlink" title="云服务器端配置"></a>云服务器端配置</h3><p>1.服务器端 在home目录下新建tomcat目录<br>2.解压文件在tomcat目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zvxf xxx.tar.gz</span><br></pre></td></tr></table></figure></p><p>3.在解压好的apache-tomcat目录下的bin目录启动服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh home/tomcat/apache-tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure></p><p>4.这是侯8080端口应该是启动的。使用命令查看<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntup | grep <span class="string">"8080"</span></span><br></pre></td></tr></table></figure></p><p>5.这时候通过http://服务公网ip地址:8080 可以访问到的。<br>如果还是访问查看防火墙是否关闭，服务器入站规则是否将8080端口加入。<br>入站规则配置可以查看相关服务器的官方帮助文档。</p><p><a href="https://help.aliyun.com/document_detail/25475.html" target="_blank" rel="noopener">阿里云</a></p><p><a href="https://cloud.tencent.com/document/product/213/2502" target="_blank" rel="noopener">腾讯云</a></p><h2 id="防火墙相关命令"><a href="#防火墙相关命令" class="headerlink" title="防火墙相关命令"></a>防火墙相关命令</h2><p>1.防火墙开/关：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><p>2.查看防火墙状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure></p><p>3.开放8080端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">public 作用范围  port 开放端口号  permanent永久生效（不设定此参数重启失效）</span><br></pre></td></tr></table></figure></p><p>4.查看所有开放端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一-Java-JDK1-8配置-Coentos-7&quot;&gt;&lt;a href=&quot;#一-Java-JDK1-8配置-Coentos-7&quot; class=&quot;headerlink&quot; title=&quot;一. Java JDK1.8配置(Coentos 7)&quot;&gt;&lt;/a&gt;一. Java J
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>测试第一篇</title>
    <link href="http://yoursite.com/2018/05/27/%E6%B5%8B%E8%AF%95%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    <id>http://yoursite.com/2018/05/27/%E6%B5%8B%E8%AF%95%E7%AC%AC%E4%B8%80%E7%AF%87/</id>
    <published>2018-05-27T07:41:01.000Z</published>
    <updated>2018-06-03T10:03:56.710Z</updated>
    
    <content type="html"><![CDATA[<pre><code>这是搭建好hexo后的第一篇文章</code></pre><h3 id="下面做个代码测试"><a href="#下面做个代码测试" class="headerlink" title="下面做个代码测试"></a>下面做个代码测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public void main(String[] agrs)&#123;</span><br><span class="line">System.out.println(<span class="string">"hellw world"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><pre><code>本次测试到此结束</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;这是搭建好hexo后的第一篇文章
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;下面做个代码测试&quot;&gt;&lt;a href=&quot;#下面做个代码测试&quot; class=&quot;headerlink&quot; title=&quot;下面做个代码测试&quot;&gt;&lt;/a&gt;下面做个代码测试&lt;/h3&gt;&lt;figure 
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
